向量索引
  向量索引的格式是向量1[向量2]
  y <- c(1,2,3,4)
  y[c[1,2] #取出y向量里面的前两位向量1,2
  y[-1] #表示剔除y向量中的第一位元素，可以和length()函数结合使用
  
  seq()函数可以用来创建连续向量 #seq(from=x,to=y,by=z)起始、终止、步长
  
  rep()函数可以用来创建重复向量 #rep(x,times=y)重复的x,以及重复的次数，rep(x,each=y)
  
  any(conditonx)和all(conditony)函数用来判断向量x,y中是否至少有一个或全部为TRUE
  
  sum()求和  mean()求平均值  abs()求绝对值  sqrt()求平方根 round()取整
  
  sapply()函数是simplify apply的缩写来简化这一切。调用sapply(x,f)即可对x的每一个元素使用
  函数f(),并将结果转化为矩阵。
  

NA与NULL值
  NA代表缺失值, NULL代表不存在的值
  在R的很多统计函数中，我们要求函数跳过缺失值
  eg:
    x <- c(88,NA,12,168,13)
    mean(x) ----> NA
    mean(x,na.rm=T) ----> 70.25
    
    x <- c(88,NULL,12,168,13)
    mean(x) ----> 70.25
    在第一个调用中，因为x中有一个缺失值NA，导致mean()无法计算均值。但可以把可选
    的参数na.rm设置为真（T）,可以计算其余元素的均值。而R会自动跳过空值NULL。


NULL的使用
  NULL的一个用法是在循环中创建向量，其中每次迭代多在这个向量上增加一个元素。
  note:类似于python中的列表添加元素---list.append()
  
    
筛选
  1 生成筛选索引
  z <- c(5,2,-3,8)
  w <- z[z*z>8]
  w ----> 5,-3,8
  note: 改变向量中的值, 
  z[z>5] <- 0
  z ----> 0,0,0,8
  
  2 使用subset()函数筛选
  x <- c(6,1:3,NA,12)
  subset(x,x>5)
  ----> 6,12
 
选择函数which() 用来提取满足条件元素的所在位置
  z <- c(5,2,-3,8)
  which(z*z > 8)
  ----> 1,3,4 返回所在值索引
  
ifelse()函数
  ifelse(b,u,v) #其中b是一个布尔值向量，而u和v是向量。
  该函数返回的值也是向量，如果b[i]为真，则返回值的第i个元素为u[i]，如果为假，则返回值的第
  i个元素为v[i]。
  
  
  x <- 1:2
  y <- c(1,2)
  identical(x,y) #判断x,y是否完全一样。
  ----> FALSE
  :产生的是整数，而c()产生的是浮点数。
  

向量元素的名称 
  可以给向量元素随意指定名称
  可以用names()函数给向量中的元素命令。
  x <- c(1,2,4)
  names(x)
  NA
  names(x) <- c('a','b','c')
  把向量元素名称赋值为NULL，可以将其移除
  names(x) <- NULL
  
  可以用名称来引用向量中的元素
  x <- c(1,2,3)
  names(x) <- c('a','b','c')
  x['a']
  ----> 1
  

  
  
